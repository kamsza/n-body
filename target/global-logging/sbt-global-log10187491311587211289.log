[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\kamsz\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\kamsz\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (JetBrains s.r.o. Java 11.0.10)
[debug]       Load.loadUnit: plugins took 269.6931ms
[debug]       Load.loadUnit: defsScala took 0.5043ms
[debug] [Loading] Scanning directory C:\Users\kamsz\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kamsz\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.802 ms
[debug]           Load.resolveProject(global-plugins) took 130.9184ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\kamsz\.sbt\1.0\plugins, plugins: List(<none>))) took 226.8181ms
[debug] [Loading] Done in C:\Users\kamsz\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 292.0805ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5131ms
[debug]     Load.loadUnit(file:/C:/Users/kamsz/.sbt/1.0/plugins/, ...) took 576.9209ms
[debug]   Load.apply: load took 1044.3284ms
[debug]   Load.apply: resolveProjects took 10.6582ms
[debug]   Load.apply: finalTransforms took 79.8718ms
[debug]   Load.apply: config.delegates took 9.0371ms
[debug]   Load.apply: Def.make(settings)... took 1022.6102ms
[debug]   Load.apply: structureIndex took 207.4327ms
[debug]   Load.apply: mkStreams took 1.9945ms
[info] loading global plugins from C:\Users\kamsz\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 11722.5036ms
[debug]           Load.loadUnit: plugins took 100.9799ms
[debug]           Load.loadUnit: defsScala took 0.0073ms
[debug] [Loading] Scanning directory E:\tmp2\n-body\project
[debug]             Load.loadUnit: mkEval took 27.7508ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\tmp2\n-body\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0887 ms
[info] loading settings for project n-body-build from idea1.sbt ...
[debug]               Load.resolveProject(n-body-build) took 24.4438ms
[debug]             Load.loadTransitive: finalizeProject(Project(id n-body-build, base: E:\tmp2\n-body\project, plugins: List(<none>))) took 28.4151ms
[debug] [Loading] Done in E:\tmp2\n-body\project, returning: (n-body-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2983.6739ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.4989ms
[debug]         Load.loadUnit(file:/E:/tmp2/n-body/project/, ...) took 3092.9452ms
[debug]       Load.apply: load took 3095.5983ms
[debug]       Load.apply: resolveProjects took 0.1188ms
[debug]       Load.apply: finalTransforms took 10.1842ms
[debug]       Load.apply: config.delegates took 0.3251ms
[debug]       Load.apply: Def.make(settings)... took 109.9943ms
[debug]       Load.apply: structureIndex took 30.791ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from E:\tmp2\n-body\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3815.8098ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory E:\tmp2\n-body
[debug]       Load.loadUnit: mkEval took 0.2049ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\tmp2\n-body, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.4946 ms
[info] loading settings for project n-body from build.sbt ...
[debug]         Load.resolveProject(n-body) took 31.3371ms
[debug]       Load.loadTransitive: finalizeProject(Project(id n-body, base: E:\tmp2\n-body, plugins: List(<none>))) took 35.0554ms
[debug] [Loading] Done in E:\tmp2\n-body, returning: (n-body)
[debug]     Load.loadUnit: loadedProjectsRaw took 1963.8351ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.0485ms
[debug]   Load.loadUnit(file:/E:/tmp2/n-body/, ...) took 5792.6025ms
[debug] Load.apply: load took 5793.9981ms
[debug] Load.apply: resolveProjects took 0.0835ms
[debug] Load.apply: finalTransforms took 26.1781ms
[debug] Load.apply: config.delegates took 0.2712ms
[debug] Load.apply: Def.make(settings)... took 92.7366ms
[debug] Load.apply: structureIndex took 20.5536ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to n-body (in build file:/E:/tmp2/n-body/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51621 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51621, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to n-body (in build file:/E:/tmp2/n-body/)
[debug] > Exec(idea-shell, None, None)
